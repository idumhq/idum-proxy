{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Idum-Proxy","text":"<p>Idum Proxy is a lightweight reverse proxy with main features :</p> <ul> <li>Protocol Support: Handle HTTP, HTTPS, WebSockets, TCP/UDP, and SOCKS proxies</li> <li>Authentication: Support for various auth methods (Basic, Digest, NTLM, Kerberos)</li> <li>Connection Pooling: Efficient reuse of connections to improve performance</li> <li>Load Balancing: Distribute traffic across multiple proxies using algorithms like round-robin, least connections</li> <li>Health Checking: Automatic detection and recovery from failed proxies</li> <li>Caching: Store and reuse responses for identical requests</li> <li>Retry Mechanisms: Automatically retry failed requests with configurable backoff</li> <li>Circuit Breaking: Prevent cascading failures by detecting and isolating problematic services</li> <li>Metrics Collection: Track proxy performance, latency, error rates</li> <li>TLS/SSL Termination: Handle encryption/decryption to reduce backend load</li> <li>IP Rotation: Change public IP addresses for scraping or anonymity</li> <li>Geo-targeting: Route requests through proxies in specific geographic locations</li> </ul>"},{"location":"#idum-proxy-for-python-developers","title":"Idum-Proxy for python developers","text":""},{"location":"#install-the-package","title":"Install the package","text":"Installing with uvInstalling with pip <pre><code>uv add idum_proxy\n</code></pre> <pre><code>pip install idum_proxy\n</code></pre>"},{"location":"#simple-example","title":"Simple example","text":"<p>proxy.json <pre><code>{\n  \"version\": \"1.0\",\n  \"name\": \"Simple example\",\n  \"endpoints\": [\n    {\n      \"prefix\": \"/\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"https://sandbox.api.service.nhs.uk/hello-world/hello/world$\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre></p> <p>main.py <pre><code>from idum_proxy import IdumProxy\nproxy:IdumProxy = IdumProxy(config_file='proxy.json')\nproxy.serve(host='0.0.0.0', port=8091)\n</code></pre></p> <p>And open a browser to go to the url http://0.0.0.0:8091 or use the curl command in a terminal: <pre><code>curl -X GET http://0.0.0.0:8091\n</code></pre></p> <p>Well done! you are ready to use Idum Proxy</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"examples/","title":"What is Idum-Proxy ?","text":"<p>Idum Proxy is a lightweight reverse proxy with cool features :</p> <ul> <li>protocols : https, tcp, tls, exec, </li> <li></li> </ul>"},{"location":"examples/#idum-proxy-for-python-developers","title":"Idum-Proxy for python developers","text":""},{"location":"examples/#install-the-package","title":"Install the package","text":"<ul> <li>uv add idum_proxy</li> <li>pip install idum_proxy</li> </ul>"},{"location":"examples/#simple-example","title":"Simple example","text":"<p>proxy.json <pre><code>{\n  \"version\": \"1.0\",\n  \"name\": \"Simple example\",\n  \"endpoints\": [\n    {\n      \"prefix\": \"/\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"http://www.example.com\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre></p> <p>main.py <pre><code>from idum_proxy import IdumProxy\nproxy:IdumProxy = IdumProxy(config_file='proxy.json')\nproxy.serve(host='0.0.0.0', port=8091)\n</code></pre></p> <ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> </ul>"},{"location":"examples/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"examples/simple/","title":"What is Idum-Proxy ?","text":"<p>Idum Proxy is a lightweight reverse proxy with cool features :</p> <ul> <li>protocols : https, tcp, tls, exec,</li> </ul>"},{"location":"examples/simple/#idum-proxy-for-python-developers","title":"Idum-Proxy for python developers","text":""},{"location":"examples/simple/#install-the-package","title":"Install the package","text":"<ul> <li>uv add idum_proxy</li> <li>pip install idum_proxy</li> </ul>"},{"location":"examples/simple/#simple-example","title":"Simple example","text":"<p>proxy.json <pre><code>{\n  \"version\": \"1.0\",\n  \"name\": \"Simple example\",\n  \"endpoints\": [\n    {\n      \"prefix\": \"/\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"http://www.example.com\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre></p> <p>main.py <pre><code>from idum_proxy import IdumProxy\nproxy:IdumProxy = IdumProxy(config_file='proxy.json')\nproxy.serve(host='0.0.0.0', port=8091)\n</code></pre></p> <ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> </ul>"},{"location":"examples/simple/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"features/","title":"API Documentation","text":""},{"location":"features/protocols/","title":"Protocols","text":"<p>idum-proxy supports multiple protocols for proxying various types of network traffic. This document describes the configuration options for each supported protocol.</p>"},{"location":"features/protocols/#httphttps","title":"HTTP/HTTPS","text":"<p>HTTP and HTTPS protocols are used for standard web traffic proxying. This is the most common use case for idum-proxy.</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"prefix\": \"/\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"http://www.example.com\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#configuration-options","title":"Configuration Options","text":"Option Description <code>prefix</code> The URL path prefix to match incoming requests <code>match</code> Pattern to match against the remaining path after the prefix <code>backends.https.url</code> Target URL to proxy requests to <code>upstream.proxy.enabled</code> Enables/disables proxying for this endpoint"},{"location":"features/protocols/#additional-httphttps-options","title":"Additional HTTP/HTTPS Options","text":"<pre><code>{\n  \"endpoints\": [\n    {\n      \"prefix\": \"/api\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"https://api.example.com\",\n          \"timeout\": 30,\n          \"headers\": {\n            \"X-Forwarded-Host\": \"{{request.host}}\",\n            \"X-Custom-Header\": \"custom-value\"\n          },\n          \"tls\": {\n            \"verify\": true,\n            \"cert\": \"/path/to/cert.pem\",\n            \"key\": \"/path/to/key.pem\"\n          }\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true,\n          \"strip_prefix\": true,\n          \"rewrite_response\": {\n            \"headers\": {\n              \"Server\": \"idum-proxy\"\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n</code></pre> Option Type Default Description <code>backends.https.timeout</code> integer 60 Request timeout in seconds <code>backends.https.headers</code> object {} Additional headers to send to the backend <code>backends.https.tls.verify</code> boolean true Verify SSL certificates <code>backends.https.tls.cert</code> string \"\" Client certificate for TLS authentication <code>backends.https.tls.key</code> string \"\" Client key for TLS authentication <code>upstream.proxy.strip_prefix</code> boolean false Strip the prefix before forwarding to the backend <code>upstream.proxy.rewrite_response.headers</code> object {} Rewrite response headers"},{"location":"features/protocols/#exec","title":"Exec","text":"<p>The Exec protocol allows idum-proxy to execute local commands or scripts and proxy requests to them.</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"prefix\": \"/scripts\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"exec\": {\n          \"command\": \"/usr/bin/python\",\n          \"args\": [\"/path/to/script.py\", \"{{request.path}}\"],\n          \"env\": {\n            \"CUSTOM_ENV\": \"value\"\n          },\n          \"working_dir\": \"/path/to/workdir\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#configuration-options_1","title":"Configuration Options","text":"Option Type Default Description <code>backends.exec.command</code> string required Command to execute <code>backends.exec.args</code> array [] Command arguments <code>backends.exec.env</code> object {} Environment variables to set <code>backends.exec.working_dir</code> string current dir Working directory for the command <code>backends.exec.timeout</code> integer 60 Execution timeout in seconds"},{"location":"features/protocols/#template-variables","title":"Template Variables","text":"<p>In the <code>args</code> array, you can use template variables to pass request information:</p> <ul> <li><code>{{request.path}}</code> - The full request path</li> <li><code>{{request.method}}</code> - The HTTP method (GET, POST, etc.)</li> <li><code>{{request.query.param}}</code> - A query parameter value</li> <li><code>{{request.headers.name}}</code> - A request header value</li> </ul>"},{"location":"features/protocols/#tcp","title":"TCP","text":"<p>TCP protocol support allows idum-proxy to handle raw TCP connections for any TCP-based protocol.</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"listen\": \"0.0.0.0:8080\",\n      \"backends\": {\n        \"tcp\": {\n          \"address\": \"backend.example.com:9000\",\n          \"timeout\": 300\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#configuration-options_2","title":"Configuration Options","text":"Option Type Default Description <code>listen</code> string required Interface and port to listen on <code>backends.tcp.address</code> string required Target address (host:port) <code>backends.tcp.timeout</code> integer 300 Connection timeout in seconds <code>backends.tcp.buffer_size</code> integer 4096 Buffer size for data transfer"},{"location":"features/protocols/#tcp-load-balancing","title":"TCP Load Balancing","text":"<pre><code>{\n  \"endpoints\": [\n    {\n      \"listen\": \"0.0.0.0:8080\",\n      \"backends\": {\n        \"tcp\": {\n          \"addresses\": [\n            \"backend1.example.com:9000\",\n            \"backend2.example.com:9000\"\n          ],\n          \"load_balancing\": \"round_robin\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre> Option Type Values Description <code>backends.tcp.addresses</code> array [] List of backend addresses for load balancing <code>backends.tcp.load_balancing</code> string \"round_robin\" Load balancing algorithm (round_robin, least_conn, ip_hash)"},{"location":"features/protocols/#udp","title":"UDP","text":"<p>UDP protocol support enables idum-proxy to handle stateless UDP traffic.</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"listen\": \"0.0.0.0:53\",\n      \"backends\": {\n        \"udp\": {\n          \"address\": \"8.8.8.8:53\",\n          \"timeout\": 5\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#configuration-options_3","title":"Configuration Options","text":"Option Type Default Description <code>listen</code> string required Interface and port to listen on <code>backends.udp.address</code> string required Target address (host:port) <code>backends.udp.timeout</code> integer 5 Response timeout in seconds <code>backends.udp.buffer_size</code> integer 4096 Maximum UDP packet size"},{"location":"features/protocols/#udp-load-balancing","title":"UDP Load Balancing","text":"<p>Similar to TCP, UDP also supports load balancing:</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"listen\": \"0.0.0.0:53\",\n      \"backends\": {\n        \"udp\": {\n          \"addresses\": [\n            \"8.8.8.8:53\",\n            \"8.8.4.4:53\"\n          ],\n          \"load_balancing\": \"random\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#socks5","title":"SOCKS5","text":"<p>SOCKS5 protocol allows idum-proxy to function as a SOCKS5 proxy server, enabling traffic tunneling for various protocols.</p> <pre><code>{\n  \"endpoints\": [\n    {\n      \"listen\": \"0.0.0.0:1080\",\n      \"backends\": {\n        \"socks5\": {\n          \"auth\": {\n            \"required\": true,\n            \"users\": [\n              {\n                \"username\": \"user\",\n                \"password\": \"pass\"\n              }\n            ]\n          },\n          \"allowed_destinations\": [\n            \"*.example.com:*\"\n          ]\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#configuration-options_4","title":"Configuration Options","text":"Option Type Default Description <code>listen</code> string required Interface and port to listen on <code>backends.socks5.auth.required</code> boolean false Require authentication <code>backends.socks5.auth.users</code> array [] List of authorized users <code>backends.socks5.allowed_destinations</code> array [\":\"] Allowed destination patterns <code>backends.socks5.bind_timeout</code> integer 30 Timeout for bind operations <code>backends.socks5.connect_timeout</code> integer 30 Timeout for connect operations"},{"location":"features/protocols/#socks5-authentication","title":"SOCKS5 Authentication","text":"<p>SOCKS5 supports username/password authentication:</p> <pre><code>\"auth\": {\n  \"required\": true,\n  \"users\": [\n    {\n      \"username\": \"user1\",\n      \"password\": \"password1\"\n    },\n    {\n      \"username\": \"user2\",\n      \"password\": \"password2\"\n    }\n  ]\n}\n</code></pre>"},{"location":"features/protocols/#socks5-destination-filtering","title":"SOCKS5 Destination Filtering","text":"<p>You can control which destinations can be accessed through the SOCKS5 proxy:</p> <pre><code>\"allowed_destinations\": [\n  \"*.example.com:80\",\n  \"*.example.com:443\",\n  \"internal.network:*\"\n]\n</code></pre> <p>This uses a wildcard pattern format: - <code>*</code> matches any character sequence within a segment - <code>:*</code> matches any port - <code>*:*</code> would allow any destination (default)</p>"},{"location":"features/protocols/#common-features","title":"Common Features","text":"<p>All protocols support these common features:</p>"},{"location":"features/protocols/#access-control","title":"Access Control","text":"<pre><code>\"access_control\": {\n  \"allow\": [\"192.168.1.0/24\"],\n  \"deny\": [\"192.168.1.100\"]\n}\n</code></pre>"},{"location":"features/protocols/#logging","title":"Logging","text":"<pre><code>\"logging\": {\n  \"level\": \"info\",\n  \"format\": \"json\",\n  \"destination\": \"file\",\n  \"file_path\": \"/var/log/idum-proxy/proxy.log\"\n}\n</code></pre>"},{"location":"features/protocols/#rate-limiting","title":"Rate Limiting","text":"<pre><code>\"rate_limit\": {\n  \"enabled\": true,\n  \"requests_per_second\": 10,\n  \"burst\": 20\n}\n</code></pre>"},{"location":"features/protocols/#tls-termination","title":"TLS Termination","text":"<pre><code>\"tls\": {\n  \"enabled\": true,\n  \"cert\": \"/path/to/cert.pem\",\n  \"key\": \"/path/to/key.pem\"\n}\n</code></pre>"},{"location":"features/middlewares/","title":"Middlewares","text":""},{"location":"features/middlewares/performance/circuit-breaker/","title":"Circuit Breaker","text":"<pre><code>...\n</code></pre>"},{"location":"features/middlewares/performance/compression/","title":"Compression","text":"<p>The Compression configuration in idum-proxy enables response compression to reduce bandwidth usage and improve page load times. By compressing responses before sending them to clients, idum-proxy can significantly reduce the size of transmitted data.</p>"},{"location":"features/middlewares/performance/compression/#configuration","title":"Configuration","text":"<p>Compression is configured in the JSON configuration file as follows:</p> <pre><code>{\n  \"performance\": {\n    \"compression\": {\n      \"enabled\": true,\n      \"algorithm\": \"gzip\",\n      \"compress_level\": 9,\n      \"min_size\": 500,\n      \"types\": [\n        \"text/html\",\n        \"text/css\",\n        \"text/javascript\",\n        \"application/json\",\n        \"application/javascript\",\n        \"text/plain\"\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"features/middlewares/performance/compression/#configuration-options","title":"Configuration Options","text":"Option Type Default Description <code>enabled</code> boolean <code>true</code> Enables or disables response compression <code>algorithm</code> string <code>\"gzip\"</code> Compression algorithm: either \"gzip\" or \"brotli\" <code>compress_level</code> integer <code>9</code> Compression level (1-9 for gzip, 1-11 for brotli) <code>min_size</code> integer <code>500</code> Minimum response size in bytes to apply compression <code>types</code> array of strings (see below) Content types that should be compressed"},{"location":"features/middlewares/performance/compression/#default-content-types","title":"Default Content Types","text":"<p>By default, idum-proxy compresses the following content types:</p> <ul> <li><code>text/html</code> - HTML documents</li> <li><code>text/css</code> - CSS stylesheets</li> <li><code>text/javascript</code> - JavaScript files</li> <li><code>application/json</code> - JSON data</li> <li><code>application/javascript</code> - JavaScript files (alternative content type)</li> <li><code>text/plain</code> - Plain text documents</li> </ul>"},{"location":"features/middlewares/performance/compression/#compression-behavior","title":"Compression Behavior","text":"<p>When compression is enabled:</p> <ol> <li>idum-proxy checks whether the client supports compression (via <code>Accept-Encoding</code> header)</li> <li>If the response content type matches one in the <code>types</code> list</li> <li>And the response size exceeds <code>min_size</code> bytes</li> <li>Then the response is compressed using the specified <code>compress_level</code></li> <li>idum-proxy adds appropriate <code>Content-Encoding</code> headers to the response</li> </ol>"},{"location":"features/middlewares/performance/compression/#compression-algorithms","title":"Compression Algorithms","text":"<p>idum-proxy supports two compression algorithms:</p>"},{"location":"features/middlewares/performance/compression/#gzip","title":"Gzip","text":"<ul> <li>Default algorithm - Widely supported by all browsers</li> <li>Compression level: 1-9 (9 is maximum compression)</li> <li>Performance profile: Faster compression speed but generally larger file sizes compared to Brotli</li> <li>Use case: Good general-purpose compression for all types of content</li> </ul>"},{"location":"features/middlewares/performance/compression/#brotli","title":"Brotli","text":"<ul> <li>Modern algorithm - Supported by all modern browsers (&gt;96% of global users)</li> <li>Compression level: 1-11 (11 is maximum compression)</li> <li>Performance profile: Better compression ratios but slower compression speed</li> <li>Use case: Ideal for static cacheable content where compression time is less important</li> </ul> <p>The proxy will automatically select the appropriate algorithm based on:</p> <ol> <li>The configured <code>algorithm</code> setting</li> <li>Client support (via <code>Accept-Encoding</code> header)</li> <li>If a client doesn't support the configured algorithm, the proxy will fall back to a supported one when possible</li> </ol>"},{"location":"features/middlewares/performance/compression/#minimum-size","title":"Minimum Size","text":"<p>The <code>min_size</code> parameter sets the threshold for applying compression:</p> <ul> <li>Responses smaller than this size will not be compressed</li> <li>This prevents the overhead of compression for very small responses</li> <li>The default value of 500 bytes is a good balance for most applications</li> </ul>"},{"location":"features/middlewares/performance/compression/#content-types","title":"Content Types","text":"<p>The <code>types</code> array specifies which content types should be compressed:</p> <ul> <li>Only responses with a <code>Content-Type</code> that matches one in this list will be compressed</li> <li>Content types should be specified as MIME types (e.g., <code>text/html</code>)</li> <li>You can add custom content types to this list if needed</li> </ul>"},{"location":"features/middlewares/performance/compression/#examples","title":"Examples","text":""},{"location":"features/middlewares/performance/compression/#using-brotli-for-maximum-compression","title":"Using Brotli for Maximum Compression","text":"<pre><code>\"compression\": {\n  \"enabled\": true,\n  \"algorithm\": \"brotli\",\n  \"compress_level\": 11,\n  \"min_size\": 500,\n  \"types\": [\n    \"text/html\",\n    \"text/css\",\n    \"text/javascript\",\n    \"application/json\",\n    \"application/javascript\",\n    \"text/plain\",\n    \"text/xml\",\n    \"application/xml\"\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/performance/compression/#using-gzip-with-balanced-compression-for-large-responses-only","title":"Using Gzip with Balanced Compression for Large Responses Only","text":"<pre><code>\"compression\": {\n  \"enabled\": true,\n  \"algorithm\": \"gzip\",\n  \"compress_level\": 6,\n  \"min_size\": 10240,\n  \"types\": [\n    \"text/html\",\n    \"text/css\",\n    \"application/json\"\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/performance/compression/#disable-compression","title":"Disable Compression","text":"<pre><code>\"compression\": {\n  \"enabled\": false\n}\n</code></pre>"},{"location":"features/middlewares/performance/compression/#performance-impact","title":"Performance Impact","text":"<ul> <li> <p>Reduced bandwidth:</p> <ul> <li>Gzip typically reduces response sizes by 60-80% for text-based content</li> <li>Brotli typically reduces response sizes by 70-90% for text-based content</li> <li>Compression efficiency comparison:</li> </ul> Content Type Gzip (Level 9) Brotli (Level 11) HTML ~75% ~85% CSS ~80% ~90% JavaScript ~70% ~80% JSON ~80% ~85% SVG ~60% ~75% </li> <li> <p>Processing overhead:</p> <ul> <li>Brotli requires more CPU time for compression, especially at higher levels</li> <li>Gzip offers faster compression but less reduction in file size</li> <li>Decompression speed is comparable between both algorithms</li> <li> <p>Ideal usage scenarios:</p> </li> <li> <p>For dynamic content: Use Gzip with level 6 (good balance)</p> </li> <li>For static cacheable content: Use Brotli with level 11 (maximum compression)</li> <li>For high-traffic APIs: Use Gzip with level 1-4 (prioritize server performance)</li> <li>For bandwidth-constrained environments: Use Brotli with level 9-11 (prioritize size reduction)</li> </ul> </li> </ul>"},{"location":"features/middlewares/performance/compression/#browser-support","title":"Browser Support","text":"<ul> <li>Gzip: Supported by virtually all browsers (&gt;99.5% of global users)</li> <li>Brotli: Supported by all modern browsers (&gt;96% of global users), including:<ul> <li>Chrome 51+ (May 2016)</li> <li>Firefox 44+ (January 2016)</li> <li>Edge 15+ (April 2017)</li> <li>Safari 11+ (September 2017)</li> <li>Opera 38+ (June 2016)</li> </ul> </li> </ul> <p>The proxy determines support by examining the <code>Accept-Encoding</code> header sent by the client:</p> <ul> <li><code>Accept-Encoding: gzip</code> - Client supports gzip</li> <li><code>Accept-Encoding: br</code> - Client supports Brotli</li> <li><code>Accept-Encoding: br, gzip</code> - Client supports both (common in modern browsers)</li> </ul> <p>If a client doesn't support the configured algorithm, idum-proxy will automatically fall back to a supported algorithm or send uncompressed content.</p>"},{"location":"features/middlewares/performance/resource-filter/","title":"Resource Filter","text":"<p>The Resource Filter configuration in idum-proxy allows you to exclude specific paths from normal proxy processing pipeline. This improves performance by bypassing middleware processing for common static files and standardized endpoints.</p>"},{"location":"features/middlewares/performance/resource-filter/#configuration","title":"Configuration","text":"<p>Resource filtering is configured in the JSON configuration file as follows:</p> <pre><code>{\n  \"performance\": {\n    \"resource_filter\": {\n      \"enabled\": true,\n      \"skip_paths\": [\n        \"favicon.ico\",\n        \".well-known/**\",\n        \"robots.txt\"\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"features/middlewares/performance/resource-filter/#configuration-options","title":"Configuration Options","text":"Option Type Default Description <code>enabled</code> boolean <code>true</code> Enables or disables the resource filter functionality <code>skip_paths</code> array <code>[]</code> List of paths or patterns that should bypass normal processing"},{"location":"features/middlewares/performance/resource-filter/#path-pattern-formats","title":"Path Pattern Formats","text":"<p>The <code>skip_paths</code> configuration supports the following pattern formats:</p> <ol> <li>Exact Path Match: <code>\"favicon.ico\"</code> - Matches this exact file only</li> <li>Directory Wildcard: <code>\".well-known/**\"</code> - Matches any path under the <code>.well-known/</code> directory</li> <li>Extension Pattern: <code>\"*.jpg\"</code> - Would match all JPEG files (not shown in example)</li> <li>Root Path: <code>\"/health\"</code> - Exact match for a root-level path</li> </ol>"},{"location":"features/middlewares/performance/resource-filter/#examples","title":"Examples","text":""},{"location":"features/middlewares/performance/resource-filter/#skipping-static-file-extensions","title":"Skipping Static File Extensions","text":"<p>To skip processing for common static files:</p> <pre><code>\"skip_paths\": [\n  \"*.jpg\",\n  \"*.png\", \n  \"*.gif\",\n  \"*.css\",\n  \"*.js\"\n]\n</code></pre>"},{"location":"features/middlewares/performance/resource-filter/#skipping-api-health-checks","title":"Skipping API Health Checks","text":"<p>To bypass proxy processing for monitoring endpoints:</p> <pre><code>\"skip_paths\": [\n  \"/health\",\n  \"/ping\",\n  \"/status\"\n]\n</code></pre>"},{"location":"features/middlewares/performance/resource-filter/#complex-pattern-example","title":"Complex Pattern Example","text":"<p>To skip processing for a complex set of paths:</p> <pre><code>\"skip_paths\": [\n  \"favicon.ico\",\n  \".well-known/**\",\n  \"robots.txt\",\n  \"static/**\",\n  \"*.jpg\",\n  \"*/assets/*\",\n  \"/api/health\"\n]\n</code></pre>"},{"location":"features/middlewares/performance/resource-filter/#performance-impact","title":"Performance Impact","text":"<p>Enabling resource filtering can significantly improve proxy performance, particularly for high-traffic websites. Common paths like <code>favicon.ico</code> can represent a substantial portion of requests but rarely benefit from full proxy processing.</p> <p>Benchmarks show that properly configured resource filtering can reduce CPU utilization by 15-30% in typical web applications.</p>"},{"location":"features/middlewares/performance/caching/in-file/","title":"Caching InFile","text":"<pre><code>...\n</code></pre>"},{"location":"features/middlewares/performance/caching/in-memory/","title":"Caching InMemory","text":"<pre><code>...\n</code></pre>"},{"location":"features/middlewares/security/bot-filter/","title":"Bot Filter","text":"<p>The Bot Filter middleware in idum-proxy provides protection against unauthorized and malicious bot traffic. It allows you to create blacklists and whitelists to control which bots can access your application.</p>"},{"location":"features/middlewares/security/bot-filter/#configuration","title":"Configuration","text":"<p>Bot filtering is configured in the JSON configuration file as follows:</p> <pre><code>{\n  \"middlewares\": {\n    \"security\": {\n      \"bot_filter\": {\n        \"enabled\": true,\n        \"blacklist\": [\n          {\n            \"name\": \"googlebot\",\n            \"user-agent\": \"crawl-***-***-***-***.googlebot.com\"\n          }\n        ],\n        \"whitelist\": []\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"features/middlewares/security/bot-filter/#configuration-options","title":"Configuration Options","text":"Option Type Default Description <code>enabled</code> boolean <code>true</code> Enables or disables the bot filter middleware <code>blacklist</code> array <code>[]</code> List of bot definitions to block <code>whitelist</code> array <code>[]</code> List of bot definitions to explicitly allow"},{"location":"features/middlewares/security/bot-filter/#bot-definition-format","title":"Bot Definition Format","text":"<p>Each bot in the blacklist or whitelist is defined with the following properties:</p> Property Type Required Description <code>name</code> string Yes Identifier for the bot (for logging and reference) <code>user-agent</code> string No Pattern to match against the User-Agent header <code>ip</code> string No IP address or CIDR range to match against client IP <code>referer</code> string No Pattern to match against the Referer header <code>path</code> string No URL path pattern to apply this rule to <p>At least one matching criterion (<code>user-agent</code>, <code>ip</code>, or <code>referer</code>) must be provided.</p>"},{"location":"features/middlewares/security/bot-filter/#filtering-behavior","title":"Filtering Behavior","text":"<p>The Bot Filter middleware processes requests in the following order:</p> <ol> <li>If the feature is disabled (<code>enabled: false</code>), all requests pass through unaffected</li> <li>If the request matches any entry in the <code>whitelist</code>, it is allowed to proceed</li> <li>If the request matches any entry in the <code>blacklist</code>, it is blocked (returns 403 Forbidden)</li> <li>If the request doesn't match any rule, it is allowed to proceed</li> </ol>"},{"location":"features/middlewares/security/bot-filter/#pattern-matching","title":"Pattern Matching","text":"<p>idum-proxy supports different pattern matching techniques for different fields:</p> <ul> <li><code>user-agent</code>: Supports wildcard patterns with <code>*</code> (e.g., <code>\"crawl-*-*.googlebot.com\"</code>)</li> <li><code>ip</code>: Supports exact IP addresses or CIDR notation (e.g., <code>\"192.168.1.1\"</code> or <code>\"192.168.1.0/24\"</code>)</li> <li><code>referer</code>: Supports wildcard patterns with <code>*</code> (e.g., <code>\"*.example.com/*\"</code>)</li> <li><code>path</code>: Supports wildcard patterns with <code>*</code> (e.g., <code>\"/api/*\"</code>)</li> </ul>"},{"location":"features/middlewares/security/bot-filter/#examples","title":"Examples","text":""},{"location":"features/middlewares/security/bot-filter/#blocking-known-bad-bots","title":"Blocking Known Bad Bots","text":"<pre><code>\"bot_filter\": {\n  \"enabled\": true,\n  \"blacklist\": [\n    {\n      \"name\": \"fake-googlebot\",\n      \"user-agent\": \"*googlebot*\",\n      \"ip\": \"192.168.1.100\"\n    },\n    {\n      \"name\": \"scraper-bot\",\n      \"user-agent\": \"*scraper*\"\n    },\n    {\n      \"name\": \"malicious-crawler\",\n      \"user-agent\": \"*crawler*\",\n      \"path\": \"/admin/*\"\n    }\n  ],\n  \"whitelist\": []\n}\n</code></pre>"},{"location":"features/middlewares/security/bot-filter/#allowing-only-specific-bots","title":"Allowing Only Specific Bots","text":"<pre><code>\"bot_filter\": {\n  \"enabled\": true,\n  \"blacklist\": [\n    {\n      \"name\": \"all-bots\",\n      \"user-agent\": \"*bot*\"\n    }\n  ],\n  \"whitelist\": [\n    {\n      \"name\": \"google\",\n      \"user-agent\": \"*googlebot*\",\n      \"ip\": \"66.249.66.0/24\"\n    },\n    {\n      \"name\": \"bing\",\n      \"user-agent\": \"*bingbot*\"\n    }\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/security/bot-filter/#protecting-specific-paths","title":"Protecting Specific Paths","text":"<pre><code>\"bot_filter\": {\n  \"enabled\": true,\n  \"blacklist\": [\n    {\n      \"name\": \"any-bot-on-private-paths\",\n      \"user-agent\": \"*bot*\",\n      \"path\": \"/private/*\"\n    },\n    {\n      \"name\": \"any-bot-on-admin\",\n      \"user-agent\": \"*bot*\",\n      \"path\": \"/admin/*\"\n    }\n  ],\n  \"whitelist\": []\n}\n</code></pre>"},{"location":"features/middlewares/security/bot-filter/#logs-and-monitoring","title":"Logs and Monitoring","text":"<p>When a bot is blocked by the filter, idum-proxy logs the event with the following information:</p> <ul> <li>Bot name from the matching rule</li> <li>Client IP address</li> <li>User-Agent header</li> <li>Request path</li> <li>Matched rule details</li> </ul> <p>These logs can be used to monitor bot activity and refine your filtering rules.</p>"},{"location":"features/middlewares/security/bot-filter/#best-practices","title":"Best Practices","text":"<ol> <li>Start with monitoring: Initially deploy with minimal blocking to observe patterns</li> <li>Verify legitimate bots: For search engines, verify their authenticity by reverse DNS lookup</li> <li>Be specific: Target specific bot behaviors rather than broad patterns</li> <li>Whitelist good bots: Explicitly whitelist legitimate bots you want to allow</li> <li>Regularly update rules: Bot patterns change regularly, keep your rules current</li> <li>Monitor false positives: Watch for legitimate traffic being blocked</li> </ol>"},{"location":"features/middlewares/security/bot-filter/#security-considerations","title":"Security Considerations","text":"<ul> <li>Bot filtering should be used as part of a larger security strategy</li> <li>Sophisticated bots can spoof User-Agent headers and IP addresses</li> <li>Consider combining with rate limiting and behavioral analysis for better protection</li> <li>For critical applications, consider using CAPTCHA or JavaScript challenges in addition to bot filtering</li> </ul>"},{"location":"features/middlewares/security/ip-filter/","title":"IP Filter","text":"<p>The IP Filter middleware in idum-proxy provides network-level access control by allowing or blocking requests based on client IP addresses. This security feature helps protect your application from unauthorized access and potential attacks from specific IP addresses or ranges.</p>"},{"location":"features/middlewares/security/ip-filter/#configuration","title":"Configuration","text":"<p>IP filtering is configured in the JSON configuration file as follows:</p> <pre><code>{\n  \"middlewares\": {\n    \"security\": {\n      \"ip_filter\": {\n        \"enabled\": true,\n        \"blacklist\": [\n          \"*.0.0.2\"\n        ]\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#configuration-options","title":"Configuration Options","text":"Option Type Default Description <code>enabled</code> boolean <code>true</code> Enables or disables the IP filter middleware <code>blacklist</code> array <code>[]</code> List of IP addresses or patterns to block <code>whitelist</code> array <code>[]</code> List of IP addresses or patterns to explicitly allow"},{"location":"features/middlewares/security/ip-filter/#filtering-behavior","title":"Filtering Behavior","text":"<p>The IP Filter middleware processes requests in the following order:</p> <ol> <li>If the feature is disabled (<code>enabled: false</code>), all requests pass through unaffected</li> <li>If a <code>whitelist</code> is provided and non-empty:</li> <li>If the client IP matches any entry in the <code>whitelist</code>, the request is allowed</li> <li>If the client IP doesn't match any entry in the <code>whitelist</code>, the request is blocked (returns 403 Forbidden)</li> <li>If only a <code>blacklist</code> is provided (or <code>whitelist</code> is empty):</li> <li>If the client IP matches any entry in the <code>blacklist</code>, the request is blocked (returns 403 Forbidden)</li> <li>If the client IP doesn't match any entry in the <code>blacklist</code>, the request is allowed</li> </ol>"},{"location":"features/middlewares/security/ip-filter/#ip-pattern-formats","title":"IP Pattern Formats","text":"<p>idum-proxy supports several formats for specifying IP addresses in the blacklist and whitelist:</p> <ol> <li>Exact IP address: <code>\"192.168.1.1\"</code></li> <li>CIDR notation: <code>\"192.168.1.0/24\"</code> (matches all IPs in the range 192.168.1.0 to 192.168.1.255)</li> <li>Wildcard pattern: <code>\"192.168.*.*\"</code> or <code>\"*.0.0.2\"</code> (using <code>*</code> as a wildcard for any number in an octet)</li> <li>IP ranges: <code>\"192.168.1.1-192.168.1.10\"</code> (matches all IPs in the inclusive range)</li> </ol>"},{"location":"features/middlewares/security/ip-filter/#examples","title":"Examples","text":""},{"location":"features/middlewares/security/ip-filter/#blocking-specific-ip-addresses","title":"Blocking Specific IP Addresses","text":"<pre><code>\"ip_filter\": {\n  \"enabled\": true,\n  \"blacklist\": [\n    \"192.168.1.1\",\n    \"10.0.0.5\",\n    \"172.16.0.100\"\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#blocking-ip-ranges","title":"Blocking IP Ranges","text":"<pre><code>\"ip_filter\": {\n  \"enabled\": true,\n  \"blacklist\": [\n    \"192.168.1.0/24\",\n    \"10.0.0.0/16\",\n    \"*.0.0.2\"\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#allowing-only-specific-ips-whitelist-mode","title":"Allowing Only Specific IPs (Whitelist Mode)","text":"<pre><code>\"ip_filter\": {\n  \"enabled\": true,\n  \"whitelist\": [\n    \"192.168.1.10\",\n    \"192.168.1.11\",\n    \"10.0.0.5\"\n  ],\n  \"blacklist\": []\n}\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#mixed-approach-whitelist-with-exceptions","title":"Mixed Approach (Whitelist with Exceptions)","text":"<pre><code>\"ip_filter\": {\n  \"enabled\": true,\n  \"whitelist\": [\n    \"192.168.1.0/24\"  // Allow the entire subnet\n  ],\n  \"blacklist\": [\n    \"192.168.1.13\"    // Except this specific IP\n  ]\n}\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#special-considerations","title":"Special Considerations","text":""},{"location":"features/middlewares/security/ip-filter/#private-networks","title":"Private Networks","text":"<p>By default, idum-proxy treats private network ranges (e.g., 10.0.0.0/8, 192.168.0.0/16) like any other IP address. If your application is deployed within a private network, be careful not to inadvertently block legitimate internal traffic.</p>"},{"location":"features/middlewares/security/ip-filter/#proxy-servers-and-cdns","title":"Proxy Servers and CDNs","text":"<p>When your application is behind a load balancer, proxy server, or CDN, the client IP address may be replaced with the IP of the intermediary service. In these cases:</p> <ol> <li>Configure your proxy to forward the original client IP (usually via <code>X-Forwarded-For</code> or similar headers)</li> <li>Configure idum-proxy to use the appropriate header for client IP detection</li> </ol>"},{"location":"features/middlewares/security/ip-filter/#ipv6-support","title":"IPv6 Support","text":"<p>The IP Filter supports both IPv4 and IPv6 addresses. IPv6 addresses should be specified in standard notation:</p> <pre><code>\"blacklist\": [\n  \"2001:db8:1234:5678:abcd:ef01:2345:6789\",\n  \"2001:db8:1234::/48\"\n]\n</code></pre>"},{"location":"features/middlewares/security/ip-filter/#performance-impact","title":"Performance Impact","text":"<p>The IP Filter middleware performs efficiently with minimal overhead:</p> <ul> <li>IP address parsing and matching is optimized for performance</li> <li>CIDR and range checks use efficient algorithms</li> <li>Wildcard patterns are converted to optimized comparison functions at startup</li> </ul> <p>Even with large blacklists or whitelists, the performance impact is typically negligible.</p>"},{"location":"features/middlewares/security/ip-filter/#security-recommendations","title":"Security Recommendations","text":"<ol> <li>Default Deny: For high-security applications, use a whitelist approach (empty blacklist, specific whitelist)</li> <li>Block Known Malicious IPs: Regularly update your blacklist with known malicious IP addresses</li> <li>Use with Rate Limiting: Combine IP filtering with rate limiting for better protection</li> <li>Monitor Logs: Regularly review logs for blocked IP attempts to identify attack patterns</li> <li>Consider Geolocation: For region-specific services, consider blocking IP ranges by country</li> </ol>"},{"location":"features/middlewares/transformer/request-transform/","title":"Request","text":""},{"location":"features/middlewares/transformer/response-transform/","title":"Response","text":""},{"location":"features/upstream/echo/","title":"Mock","text":"<pre><code>{\n  \"upstream\": {\n    \"echo\": {\n      \"enabled\": true,\n      \"add_headers\": {\n        \"X-Echo-Service\": \"true\",\n        \"X-Request-Time\": \"${timestamp}\"\n      },\n      \"response_delay_ms\": 100\n    }\n  }\n}\n</code></pre>"},{"location":"features/upstream/mock/","title":"Mock","text":"<pre><code>{\n  \"upstream\": {\n    \"mock\": {\n      \"enabled\": true,\n      \"path_templates\": {\n        \"/users\": {\n          \"status_code\": 200,\n          \"content_type\": \"application/json\",\n          \"body\": {\n            \"users\": [\n              {\n                \"id\": 1,\n                \"name\": \"John Doe\"\n              },\n              {\n                \"id\": 2,\n                \"name\": \"Jane Smith\"\n              }\n            ]\n          }\n        },\n        \"/users/{id}\": {\n          \"status_code\": 200,\n          \"content_type\": \"application/json\",\n          \"body\": {\n            \"id\": \"${path.id}\",\n            \"name\": \"User ${path.id}\",\n            \"email\": \"user${path.id}@example.com\"\n          }\n        }\n      },\n      \"default_response\": {\n        \"status_code\": 404,\n        \"body\": {\n          \"error\": \"Resource not found\"\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"get-started/concept/","title":"What is Idum-Proxy ?","text":"<p>Idum Proxy is a lightweight reverse proxy with cool features :</p> <ul> <li>protocols : https, tcp, tls, exec,</li> </ul>"},{"location":"get-started/concept/#idum-proxy-for-python-developers","title":"Idum-Proxy for python developers","text":""},{"location":"get-started/concept/#install-the-package","title":"Install the package","text":"<ul> <li>uv add idum_proxy</li> <li>pip install idum_proxy</li> </ul>"},{"location":"get-started/concept/#simple-example","title":"Simple example","text":"<p>proxy.json <pre><code>{\n  \"version\": \"1.0\",\n  \"name\": \"Simple example\",\n  \"endpoints\": [\n    {\n      \"prefix\": \"/\",\n      \"match\": \"**/*\",\n      \"backends\": {\n        \"https\": {\n          \"url\": \"https://sandbox.api.service.nhs.uk/hello-world/hello/world$\"\n        }\n      },\n      \"upstream\": {\n        \"proxy\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ]\n}\n</code></pre></p> <p>main.py <pre><code>from idum_proxy import IdumProxy\nproxy:IdumProxy = IdumProxy(config_file='proxy.json')\nproxy.serve(host='0.0.0.0', port=8091)\n</code></pre></p>"},{"location":"registry/docker/","title":"DOCKER","text":""},{"location":"registry/maven/","title":"Maven","text":""},{"location":"registry/maven/#configure-the-remote-repository","title":"Configure the remote repository","text":"<pre><code>{\n  \"identifier\": \"maven-remote-central\",\n  \"prefix\": \"/maven-remote-central\",\n  \"match\": \"/maven-remote-central/**\",\n  \"backends\": [\n    {\n      \"https\": [\n        {\n          \"id\": \"maven-central\",\n          \"url\": \"https://repo1.maven.org/maven2\",\n          \"ssl\": true\n        }\n      ]\n    }\n  ],\n  \"upstream\": {\n    \"proxy\": {\n      \"enabled\": true,\n      \"timeout_seconds\": 60\n    },\n    \"cache\": {\n      \"file\": {\n        \"enabled\": true,\n        \"path\": \".cache/maven/maven-remote-central\",\n        \"ttl\": 43200,\n        \"max_size_mb\": 256,\n        \"max_entries\": 2500\n      }\n    }\n  },\n  \"transformers\": {\n    \"response\": {\n      \"enabled\": true,\n      \"textReplacements\": [\n        {\n          \"oldvalue\": \"href=\\\"\",\n          \"newvalue\": \"href=\\\"${path}\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"registry/npm/","title":"NPM","text":""},{"location":"registry/nuget/","title":"NUGET","text":""},{"location":"registry/pypi/","title":"Pypi","text":""},{"location":"registry/pypi/#configure-the-remote-repository","title":"Configure the remote repository","text":"<pre><code>{\n  \"identifier\": \"pypi-remote-official\",\n  \"prefix\": \"/pypi-remote-official\",\n  \"match\": \"/pypi-remote-official/**\",\n  \"backends\": [\n    {\n      \"https\": [\n        {\n          \"id\": \"pypi-primary\",\n          \"url\": \"https://pypi.org/simple\",\n          \"ssl\": true\n        }\n      ]\n    }\n  ],\n  \"upstream\": {\n    \"proxy\": {\n      \"enabled\": true,\n      \"timeout_seconds\": 60\n    },\n    \"cache\": {\n      \"file\": {\n        \"enabled\": true,\n        \"path\": \".cache/pypi/pypi-remote-official\",\n        \"ttl\": 43200,\n        \"max_size_mb\": 256,\n        \"max_entries\": 2500\n      }\n    }\n  },\n  \"transformers\": {\n    \"response\": {\n      \"enabled\": true,\n      \"textReplacements\": [\n        {\n          \"oldvalue\": \"https://pypi.org/simple\",\n          \"newvalue\": \"http://0.0.0.0:8080/pypi-remote-official\"\n        },\n        {\n          \"oldvalue\": \"/simple\",\n          \"newvalue\": \"/pypi-remote-official\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"registry/pypi/#configure-a-local-repository","title":"Configure a local repository","text":"<pre><code>{\n  \"identifier\": \"pypi-demo-local\",\n  \"prefix\": \"/pypi-demo-local\",\n  \"match\": \"/pypi-demo-local/**\",\n  \"upstream\": {\n    \"file\": {\n      \"enabled\": true,\n      \"path\": \".files/pypi/pypi-demo-local\"\n    }\n  }\n}\n</code></pre>"},{"location":"registry/pypi/#configure-a-virtual-repository","title":"Configure a virtual repository","text":"<pre><code>{\n  \"prefix\": \"/pypi-virtual-all\",\n  \"match\": \"/pypi-virtual-all/**\",\n  \"upstream\": {\n    \"virtual\": {\n      \"sources\": [\n        \"pypi-demo-local\",\n        \"pypi-remote-official\"\n      ],\n      \"strategy\": \"first-match\"\n    }\n  }\n}\n</code></pre>"}]}